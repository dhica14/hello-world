{"version":3,"sources":["AddressForm.js","AddressFormCheck.js","SelectForm.js","appConfig.js","Checkout.js","serviceWorker.js","index.js"],"names":["AddressForm","props","react_default","a","createElement","Fragment","Typography_default","variant","gutterBottom","Grid_default","container","spacing","item","xs","sm","TextField_default","required","id","name","label","fullWidth","autoComplete","onChange","dataChange","value","dataStates","firstName","lastName","address1","address2","city","state","zip","country","disabled","FormControlLabel_default","control","Checkbox_default","color","checked","checkedA","checkedB","checkedC","checkedD","SelectForm","dataChecke","appConfig","region","IdentityPoolId","AWS","config","credentials","CognitoIdentityCredentials","get","err","console","log","identityId","steps","Checkout","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNext","e","setState","activeStep","handleBack","handleReset","key","target","newValue","defineProperty","isCheck","uploadFile","now","Date","obj","firstname","checkeda","checkedb","checkedc","checkedd","date","toLocaleString","s3","S3","params","Bucket","blob","Blob","JSON","stringify","type","putObject","Key","getTime","ContentType","Body","ACL","data","alert","message","_this2","classes","CssBaseline_default","AppBar_default","position","className","appBar","Toolbar_default","noWrap","layout","Paper_default","paper","component","align","Stepper_default","stepper","map","Step_default","StepLabel_default","length","step","src_AddressForm","src_SelectForm","AddressFormCheck","Error","getStepContent","buttons","Button_default","onClick","button","React","Component","withStyles","theme","width","marginLeft","unit","marginRight","breakpoints","up","marginTop","marginBottom","padding","concat","display","justifyContent","Boolean","window","location","hostname","match","ReactDOM","render","src_Checkout","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d84d6f8.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\n\nfunction AddressForm(props) {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        個人情報入力\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            value={props.dataStates.firstName}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Last name\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            value={props.dataStates.lastName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"emailAddress\"\n            name=\"emailAddress\"\n            label=\"Email address\"\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            // value={props.dataStates.firstName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"emailAddressCheck\"\n            name=\"emailAddressCheck\"\n            label=\"Email address check\"\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            // value={props.dataStates.firstName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"contactNumber\"\n            name=\"contactNumber\"\n            label=\"Contact number\"\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            // value={props.dataStates.firstName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            value={props.dataStates.address1}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"address2\"\n            name=\"address2\"\n            label=\"Address line 2\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            value={props.dataStates.address2}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            value={props.dataStates.city}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id=\"state\"\n            name=\"state\"\n            label=\"State/Province/Region\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            value={props.dataStates.state}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            value={props.dataStates.zip}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"country\"\n            name=\"country\"\n            label=\"Country\"\n            fullWidth\n            autoComplete=\"off\"\n            onChange={props.dataChange}\n            value={props.dataStates.country}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default AddressForm;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nfunction AddressForm(props) {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        個人情報確認\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            autoComplete=\"off\"\n            value={props.dataStates.firstName}\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Last name\"\n            fullWidth\n            autoComplete=\"off\"\n            value={props.dataStates.lastName}\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            autoComplete=\"off\"\n            value={props.dataStates.address1}\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"address2\"\n            name=\"address2\"\n            label=\"Address line 2\"\n            fullWidth\n            autoComplete=\"off\"\n            value={props.dataStates.address2}\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            autoComplete=\"off\"\n            value={props.dataStates.city}\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id=\"state\"\n            name=\"state\"\n            label=\"State/Province/Region\"\n            fullWidth\n            autoComplete=\"off\"\n            value={props.dataStates.state}\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            autoComplete=\"off\"\n            value={props.dataStates.zip}\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"country\"\n            name=\"country\"\n            label=\"Country\"\n            fullWidth\n            autoComplete=\"off\"\n            value={props.dataStates.country}\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                name=\"checkedA\"\n                checked={props.dataStates.checkedA}\n            />}\n            label=\"パターン１\"\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                name=\"checkedB\"\n                checked={props.dataStates.checkedB}\n              />}\n            label=\"パターン２\"\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                name=\"checkedC\"\n                checked={props.dataStates.checkedC}\n              />}\n            label=\"パターン３\"\n            disabled\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControlLabel\n          control={\n            <Checkbox\n              color=\"primary\"\n              name=\"checkedD\"\n              checked={props.dataStates.checkedD}\n            />}\n            label=\"パターン４\"\n            disabled\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\n            label=\"利用規約に同意する\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default AddressForm;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction SelectForm(props) {\n  return (\n    <React.Fragment>\n    <Typography variant=\"h6\" gutterBottom>\n     必要な資料を選択してください。\n    </Typography>\n    <Grid container spacing={24}>\n       <Grid item xs={12} sm={6}>\n         <FormControlLabel\n           control={\n             <Checkbox\n               color=\"primary\"\n               name=\"checkedA\"\n               onChange={props.dataChecke}\n               checked={props.dataStates.checkedA}\n           />}\n           label=\"資料A\"\n         />\n       </Grid>\n       <Grid item xs={12} sm={6}>\n         <FormControlLabel\n           control={\n             <Checkbox\n               color=\"primary\"\n               name=\"checkedB\"\n               onChange={props.dataChecke}\n               checked={props.dataStates.checkedB}\n             />}\n           label=\"資料B\"\n         />\n       </Grid>\n       <Grid item xs={12} sm={6}>\n         <FormControlLabel\n           control={\n             <Checkbox\n               color=\"primary\"\n               name=\"checkedC\"\n               onChange={props.dataChecke}\n               checked={props.dataStates.checkedC}\n             />}\n           label=\"資料C\"\n         />\n       </Grid>\n       <Grid item xs={12} sm={6}>\n         <FormControlLabel\n         control={\n           <Checkbox\n             color=\"primary\"\n             name=\"checkedD\"\n             onChange={props.dataChecke}\n             checked={props.dataStates.checkedD}\n           />}\n           label=\"資料D\"\n         />\n       </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default SelectForm;\n","const appConfig = {\n  region: 'ap-northeast-1',\n  IdentityPoolId: 'ap-northeast-1:08f2a2a5-2132-4952-a9e6-1e5c2430569a',\n};\nexport default appConfig;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport AddressFormCheck from './AddressFormCheck';\nimport SelectForm from './SelectForm';\n\nimport AWS from 'aws-sdk';\nimport appConfig from './appConfig';\n\n// aws setting\nAWS.config.region = appConfig.region;\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({IdentityPoolId: appConfig.IdentityPoolId});\nAWS.config.credentials.get(function(err) {\n    if (!err) {\n        console.log(\"Cognito Identify Id: \" + AWS.config.credentials.identityId);\n    }\n});\n\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nconst steps = ['個人情報入力', '資料を選択', '確認画面'];\n// const steps = ['Shipping address', 'Payment details', 'Review your order'];\n\nfunction getStepContent(step, dataStates, dataChange, dataChecke) {\n  switch (step) {\n    case 0:\n      return <AddressForm dataStates={dataStates} dataChange={dataChange} />;\n    case 1:\n      return <SelectForm dataStates={dataStates} dataChecke={dataChecke} />;\n    case 2:\n      return <AddressFormCheck dataStates={dataStates} />;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\n// function uploadFile() {\n//     AWS.config.region = 'ap-northeast-1';\n//     var s3BucketName = \"test.form.com\";\n//     var now = new Date();\n//     // var obj = {\"title\":$id(\"title\").value, \"mail\":$id(\"mail\").value ,\"contents\":$id(\"contents\").value, \"date\": now.toLocaleString()};\n//     var obj = {\"title\":$id(\"title\").value, \"mail\":$id(\"mail\").value ,\"contents\":$id(\"contents\").value, \"date\": now.toLocaleString()};\n//     var s3 = new AWS.S3({params: {Bucket: s3BucketName}});\n//     var blob = new Blob([JSON.stringify(obj, null, 2)], {type:'text/plain'});\n//     s3.putObject({Key: \"uploads/\" +now.getTime()+\".txt\", ContentType: \"text/plain\", Body: blob, ACL: \"public-read\"},\n//     function(err, data){\n//         if(data !== null){\n//             alert(\"お問い合わせ完了致しました\");\n//         }\n//         else{\n//             alert(\"Upload Failed\" + err.message);\n//         }\n//     });\n// }\n\nclass Checkout extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0,\n      firstName: '',\n      lastName: '',\n      address1: '',\n      address2: '',\n      city: '',\n      state: '',\n      zip: '',\n      country: '',\n      checkedA: false,\n      checkedB: false,\n      checkedC: false,\n      checkedD: false,\n    };\n  }\n\n  handleNext = (e) => {\n    this.setState(state => ({\n      activeStep: state.activeStep + 1,\n    }));\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  dataChange = (e) => {\n    const key = e.target.name\n    const newValue = e.target.value\n    this.setState(state =>({\n      [key]: newValue\n    }));\n  }\n  dataChecke = (e) => {\n    const key = e.target.name\n    const isCheck = e.target.checked\n    this.setState(state =>({\n      [key]: isCheck\n    }));\n  }\n\n  uploadFile = () => {\n    console.log('uploadFile')\n    console.log(this.state.firstName)\n    AWS.config.region = 'ap-northeast-1';\n    var s3BucketName = \"react-data-test.com\";\n    var now = new Date();\n    // var obj = {\"title\":$id(\"title\").value, \"mail\":$id(\"mail\").value ,\"contents\":$id(\"contents\").value, \"date\": now.toLocaleString()};\n    var obj = {\n      \"firstname\":this.state.firstName,\n      \"lastName\":this.state.lastName,\n      \"checkeda\":this.state.checkedA,\n      \"checkedb\":this.state.checkedB,\n      \"checkedc\":this.state.checkedC,\n      \"checkedd\":this.state.checkedD,\n      \"date\": now.toLocaleString()\n    };\n    var s3 = new AWS.S3({params: {Bucket: s3BucketName}});\n    var blob = new Blob([JSON.stringify(obj, null, 2)], {type:'text/plain'});\n    s3.putObject({Key: \"uploads/\" +now.getTime()+\".txt\", ContentType: \"text/plain\", Body: blob, ACL: \"public-read\"},\n    function(err, data){\n        if(data !== null){\n            alert(\"お問い合わせ完了致しました\");\n        }\n        else{\n            alert(\"Upload Failed\" + err.message);\n        }\n    });\n    this.handleNext()\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { activeStep } = this.state;\n    const dataStates  = this.state;\n    const dataChange = (e) => this.dataChange(e)\n    const dataChecke = (e) => this.dataChecke(e)\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              リアルタイム配信\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              資料請求\n            </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map(label => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" gutterBottom>\n                    ご登録ありがとうございます。\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    メールにて資料をお送りいたしますので、\n                    お待ちください。\n                  </Typography>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep, dataStates, dataChange, dataChecke)}\n                  <div className={classes.buttons}>\n                    {activeStep !== 0 && (\n                      <Button onClick={this.handleBack} className={classes.button}>\n                        Back\n                      </Button>\n                    )}\n\n                    {activeStep === steps.length - 1 ? (\n\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        // onClick={this.handleNext}\n                        onClick={this.uploadFile}\n                        className={classes.button}\n                      >\n                        Place order\n                      </Button>\n                    ) : (\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this.handleNext}\n                        className={classes.button}\n                      >\n                        Next\n                      </Button>\n                    )}\n                  </div>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          </Paper>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Checkout);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Checkout from './Checkout';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Checkout />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}